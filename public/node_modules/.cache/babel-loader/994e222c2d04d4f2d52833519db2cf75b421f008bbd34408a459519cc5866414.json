{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Desktop\\\\movieFinderNEW\\\\public\\\\src\\\\pages\\\\tv\\\\TvPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { getTvDetails } from \"../../controllers/api\";\nimport ItemsCarousel from \"react-items-carousel\";\nimport { Heading } from \"../../components/heading/Heading\";\nimport { RatingsInfo } from \"../../components/ratingsInfo/RatingsInfo\";\nimport { MediaContainer } from \"../../containers/media/MediaContainer\";\nimport { Genre } from \"../../components/genres/Genres\";\nimport { SectionTitle } from \"../../components/section/SectionTitle\";\nimport { Text } from \"../../components/text/Text\";\nimport { PeopleContainer } from \"../../containers/cast/PeopleContainer\";\nimport { MovieCard } from \"../../components/cards/MovieCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TvPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [tv, setTv] = useState(null);\n  const [cast, setCast] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [similar, setSimilar] = useState(null);\n  const [genres, setGenres] = useState(null);\n  useEffect(() => {\n    async function getTVDetails() {\n      const tv = await getTvDetails(id);\n      const extractGenres = Array.from(tv.genres, genre => genre.name);\n      setGenres(extractGenres);\n      setTv(tv);\n      setCast(tv.credits.cast);\n      setSimilar(tv.similar.results);\n      setVideos(tv.videos.results);\n    }\n    getTVDetails();\n  }, []);\n  console.log(\"cast\" + cast);\n  console.log(\"videos\" + videos);\n  console.log(\"similar\" + similar);\n  console.log(\"genres\" + genres);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      name: tv.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RatingsInfo, {\n      runtime: tv.episode_run_time,\n      status: tv.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), videos ? /*#__PURE__*/_jsxDEV(MediaContainer, {\n      posterPath: tv.poster_path || tv.backdrop_path,\n      imgSize: \"medium\",\n      alt: tv.name,\n      videoKey: videos[0].key,\n      imgStyles: \"poster-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : \"\", genres ? /*#__PURE__*/_jsxDEV(Genre, {\n      genres: genres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(Heading, {\n      name: tv.tagline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      text: tv.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n      name: \"Top Cast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), cast ? /*#__PURE__*/_jsxDEV(PeopleContainer, {\n      cast: cast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TvPage, \"K4IqsI9xXrAVWYDNZCE0OYE3nzk=\", false, function () {\n  return [useParams];\n});\n_c = TvPage;\nvar _c;\n$RefreshReg$(_c, \"TvPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getTvDetails","ItemsCarousel","Heading","RatingsInfo","MediaContainer","Genre","SectionTitle","Text","PeopleContainer","MovieCard","FontAwesomeIcon","faChevronLeft","faChevronRight","TvPage","id","tv","setTv","cast","setCast","videos","setVideos","similar","setSimilar","genres","setGenres","getTVDetails","extractGenres","Array","from","genre","name","credits","results","console","log","episode_run_time","status","poster_path","backdrop_path","key","tagline","overview"],"sources":["C:/Users/natal/Desktop/movieFinderNEW/public/src/pages/tv/TvPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { getTvDetails } from \"../../controllers/api\";\r\nimport ItemsCarousel from \"react-items-carousel\";\r\nimport { Heading } from \"../../components/heading/Heading\";\r\nimport { RatingsInfo } from \"../../components/ratingsInfo/RatingsInfo\";\r\nimport { MediaContainer } from \"../../containers/media/MediaContainer\";\r\nimport { Genre } from \"../../components/genres/Genres\";\r\nimport { SectionTitle } from \"../../components/section/SectionTitle\";\r\nimport { Text } from \"../../components/text/Text\";\r\nimport { PeopleContainer } from \"../../containers/cast/PeopleContainer\";\r\nimport { MovieCard } from \"../../components/cards/MovieCard\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const TvPage = () => {\r\n  const { id } = useParams();\r\n\r\n  const [tv, setTv] = useState(null);\r\n  const [cast, setCast] = useState(null);\r\n  const [videos, setVideos] = useState(null);\r\n  const [similar, setSimilar] = useState(null);\r\n  const [genres, setGenres] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getTVDetails() {\r\n      const tv = await getTvDetails(id);\r\n      const extractGenres = Array.from(tv.genres, (genre) => genre.name);\r\n      setGenres(extractGenres);\r\n      setTv(tv);\r\n      setCast(tv.credits.cast);\r\n      setSimilar(tv.similar.results);\r\n      setVideos(tv.videos.results);\r\n    }\r\n    getTVDetails();\r\n  }, []);\r\n\r\n  console.log(\"cast\" + cast);\r\n  console.log(\"videos\" + videos);\r\n  console.log(\"similar\" + similar);\r\n  console.log(\"genres\" + genres);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Heading name={tv.name} />\r\n      <RatingsInfo runtime={tv.episode_run_time} status={tv.status} />\r\n      {videos ? (\r\n        <MediaContainer\r\n          posterPath={tv.poster_path || tv.backdrop_path}\r\n          imgSize={\"medium\"}\r\n          alt={tv.name}\r\n          videoKey={videos[0].key}\r\n          imgStyles={\"poster-img\"}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {genres? <Genre genres={genres} /> : \"\"}\r\n      <Heading name={tv.tagline} />\r\n      <Text text={tv.overview} />\r\n\r\n      <SectionTitle name={\"Top Cast\"} />\r\n      {cast ? <PeopleContainer cast={cast} /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}