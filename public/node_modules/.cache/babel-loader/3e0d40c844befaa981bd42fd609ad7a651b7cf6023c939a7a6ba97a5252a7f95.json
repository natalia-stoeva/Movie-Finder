{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Desktop\\\\movieFinderNEW\\\\public\\\\src\\\\pages\\\\movie\\\\MoviePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getDetails, getPeople } from \"../../controllers/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MoviePage = () => {\n  _s();\n  //get the id of the clicked movie\n  const {\n    id\n  } = useParams();\n  console.log('movie id is ' + id);\n  const [movie, setMovie] = useState(id);\n\n  //   //with appended to response\n  const [cast, setCast] = useState(null);\n  const [images, setImages] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [similar, setSimilar] = useState(null);\n  useEffect(() => {\n    async function getMovieDetails() {\n      const movieDetails = await getDetails(id);\n      setMovie(movieDetails);\n      setCast(movieDetails.credits.cast);\n      setSimilar(movieDetails.similar);\n      // console.log(movieDetails.similar)\n    }\n\n    getMovieDetails();\n  }, []);\n  console.log(similar);\n\n  //   //Video\n  //   const [videos, setVideos] = useState({});\n\n  //   useEffect(() => {\n  //     async function getVideosDetails() {\n  //       const videos = await getVideos(movieID);\n  //       //get the fist video key //FIX LATER\n  //       const key = videos[0].key;\n  //       setVideos(key);\n  //     }\n  //     getVideosDetails();\n  //   }, [movieID]);\n\n  //   //Genres\n  //   const [genres, setGenres] = useState([]);\n  //   useEffect(() => {\n  //     if (movie) {\n  //       setGenres(movie.genres);\n  //     }\n  //   }, [movie]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this)\n  // <div className=\"container\">\n  //   <Heading name={movie.title} />\n  //   <RatingsInfo runtime={movie.runtime} status={movie.status} />\n  //   <Media posterPath={movie.poster_path} videoKey={videos} />\n\n  //   <div className=\"row\">\n  //     <div className=\"col my-4\">\n  //       {genres ? (\n  //         genres.map((genre) => {\n  //           return <Categorie categorie={genre.name} key={genre.name} />;\n  //         })\n  //       ) : (\n  //         <p>no genres info</p>\n  //       )}\n  //     </div>\n  //   </div>\n\n  //   <Info overview={movie.overview} tagline={movie.tagline} />\n\n  //   <SectionTitle name={\"Top Cast\"} />\n\n  //   <div className=\"row\">\n  //     {cast ? (\n  //       cast.slice(0, 12).map((member) => {\n  //         return (\n  //           <Cast\n  //             key={member.id}\n  //             id={member.id}\n  //             photo={member.profile_path}\n  //             name={member.name}\n  //             character={member.character}\n  //           />\n  //         );\n  //       })\n  //     ) : (\n  //       <p>no cast data</p>\n  //     )}\n  //   </div>\n\n  //   <div className=\"row\">\n  //     <SectionTitle name={\"Similar Movies\"} />\n  //     {similar ? (\n  //       similar.results.map((movie) => {\n  //         return (\n  //           <MovieCart\n  //             key={movie.id}\n  //             title={movie.title}\n  //             id={movie.id}\n  //             poster={movie.poster_path || movie.backdrop_path}\n  //             overview={movie.overview}\n  //             ratings={movie.vote_average}\n  //             populatiry={movie.popularity}\n  //             release={movie.release_date}\n  //           />\n  //         );\n  //       })\n  //     ) : (\n  //       <p>no similar movies</p>\n  //     )}\n  //   </div>\n  // </div>\n  ;\n};\n_s(MoviePage, \"O4QdW0V5OrGulid1Ksn/3rXdk/o=\", false, function () {\n  return [useParams];\n});\n_c = MoviePage;\nvar _c;\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getDetails","getPeople","MoviePage","id","console","log","movie","setMovie","cast","setCast","images","setImages","videos","setVideos","similar","setSimilar","getMovieDetails","movieDetails","credits"],"sources":["C:/Users/natal/Desktop/movieFinderNEW/public/src/pages/movie/MoviePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { getDetails, getPeople } from \"../../controllers/api\";\r\n\r\nexport const MoviePage = () => {\r\n  //get the id of the clicked movie\r\n  const { id } = useParams();\r\n  console.log('movie id is ' + id)\r\n\r\n  const [movie, setMovie] = useState(id);\r\n\r\n//   //with appended to response\r\n  const [cast, setCast] = useState(null);\r\n  const [images, setImages] = useState(null);\r\n\r\n   const [videos, setVideos] = useState(null);\r\n  const [similar, setSimilar] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getMovieDetails() {\r\n      const movieDetails = await getDetails(id);\r\n      setMovie(movieDetails);\r\n      setCast(movieDetails.credits.cast);\r\n      setSimilar(movieDetails.similar);\r\n      // console.log(movieDetails.similar)\r\n    }\r\n    getMovieDetails();\r\n  }, []);\r\n\r\n  console.log(similar);\r\n\r\n//   //Video\r\n//   const [videos, setVideos] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     async function getVideosDetails() {\r\n//       const videos = await getVideos(movieID);\r\n//       //get the fist video key //FIX LATER\r\n//       const key = videos[0].key;\r\n//       setVideos(key);\r\n//     }\r\n//     getVideosDetails();\r\n//   }, [movieID]);\r\n\r\n//   //Genres\r\n//   const [genres, setGenres] = useState([]);\r\n//   useEffect(() => {\r\n//     if (movie) {\r\n//       setGenres(movie.genres);\r\n//     }\r\n//   }, [movie]);\r\n\r\n  return (\r\n    <div></div>\r\n    // <div className=\"container\">\r\n    //   <Heading name={movie.title} />\r\n    //   <RatingsInfo runtime={movie.runtime} status={movie.status} />\r\n    //   <Media posterPath={movie.poster_path} videoKey={videos} />\r\n\r\n    //   <div className=\"row\">\r\n    //     <div className=\"col my-4\">\r\n    //       {genres ? (\r\n    //         genres.map((genre) => {\r\n    //           return <Categorie categorie={genre.name} key={genre.name} />;\r\n    //         })\r\n    //       ) : (\r\n    //         <p>no genres info</p>\r\n    //       )}\r\n    //     </div>\r\n    //   </div>\r\n\r\n    //   <Info overview={movie.overview} tagline={movie.tagline} />\r\n\r\n    //   <SectionTitle name={\"Top Cast\"} />\r\n\r\n    //   <div className=\"row\">\r\n    //     {cast ? (\r\n    //       cast.slice(0, 12).map((member) => {\r\n    //         return (\r\n    //           <Cast\r\n    //             key={member.id}\r\n    //             id={member.id}\r\n    //             photo={member.profile_path}\r\n    //             name={member.name}\r\n    //             character={member.character}\r\n    //           />\r\n    //         );\r\n    //       })\r\n    //     ) : (\r\n    //       <p>no cast data</p>\r\n    //     )}\r\n    //   </div>\r\n\r\n    //   <div className=\"row\">\r\n    //     <SectionTitle name={\"Similar Movies\"} />\r\n    //     {similar ? (\r\n    //       similar.results.map((movie) => {\r\n    //         return (\r\n    //           <MovieCart\r\n    //             key={movie.id}\r\n    //             title={movie.title}\r\n    //             id={movie.id}\r\n    //             poster={movie.poster_path || movie.backdrop_path}\r\n    //             overview={movie.overview}\r\n    //             ratings={movie.vote_average}\r\n    //             populatiry={movie.popularity}\r\n    //             release={movie.release_date}\r\n    //           />\r\n    //         );\r\n    //       })\r\n    //     ) : (\r\n    //       <p>no similar movies</p>\r\n    //     )}\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,SAAS,QAAQ,uBAAuB;AAAC;AAE9D,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGJ,SAAS,EAAE;EAC1BK,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGF,EAAE,CAAC;EAEhC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACM,EAAE,CAAC;;EAExC;EACE,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEzC,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,eAAekB,eAAe,GAAG;MAC/B,MAAMC,YAAY,GAAG,MAAMjB,UAAU,CAACG,EAAE,CAAC;MACzCI,QAAQ,CAACU,YAAY,CAAC;MACtBR,OAAO,CAACQ,YAAY,CAACC,OAAO,CAACV,IAAI,CAAC;MAClCO,UAAU,CAACE,YAAY,CAACH,OAAO,CAAC;MAChC;IACF;;IACAE,eAAe,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAENZ,OAAO,CAACC,GAAG,CAACS,OAAO,CAAC;;EAEtB;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACE;IAAA;IAAA;IAAA;EAAA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAC,GAhHWZ,SAAS;EAAA,QAELH,SAAS;AAAA;AAAA,KAFbG,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}