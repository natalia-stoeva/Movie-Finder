{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Desktop\\\\movieFinderNEW\\\\public\\\\src\\\\pages\\\\person\\\\PersonPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getPeople } from \"../../controllers/api\";\nimport { Heading } from \"../../components/heading/Heading\";\nimport { MediaContainer } from \"../../containers/media/MediaContainer\";\nimport { SectionTitle } from \"../../components/section/SectionTitle\";\nimport { Text } from \"../../components/text/Text\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PersonPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [person, setPerson] = useState(null);\n  const [credits, setCredits] = useState(null);\n  useEffect(() => {\n    async function getPersonData() {\n      const personData = await getPeople(id);\n      setPerson(personData);\n      setCredits(personData.combined_credits);\n    }\n    getPersonData();\n  }, []);\n  console.log(person);\n  console.log(credits);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [person ? /*#__PURE__*/_jsxDEV(Heading, {\n      name: person.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(MediaContainer, {\n      posterPath: person.profile_path,\n      videoKey: \"\",\n      alt: person.name,\n      imgSize: \"medium\",\n      imgType: \"main-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Known for department: \", person.known_for_department]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        name: \"Biography\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Born: \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"info-values\",\n            children: [person.birthday, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\" \", person.place_of_birth]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"row mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          text: person.biography\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(SectionTitle, {\n        name: \"Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n//     return (\n//       <div className=\"container\">\n//         {person ? (\n//           <div className=\"container\">\n//             <Heading name={person.name} />\n\n//             <Poster path={person.profile_path} alt={person.name} />\n\n//             <div className=\"row py-2\">\n//               <p>\n//                 <i>\n//                   Known for department:{\" \"}\n//                   <span className=\"info-values\">\n//                     {person.known_for_department}\n//                   </span>\n//                 </i>{\" \"}\n//               </p>\n//             </div>\n\n//             <SectionTitle name={\"Biography\"} />\n\n//             <div className=\"row\">\n//               <div className=\"col\">\n//                 <p>\n//                   Place of Birth: <i>{person.place_of_birth}</i>\n//                 </p>\n//                 <p>\n//                   Born at: <i>{person.birthday}</i>\n//                 </p>\n//               </div>\n//             </div>\n\n//             <div className=\"row\">\n//               <p>{person.biography}</p>\n//             </div>\n\n//             <SectionTitle name={\"Credits\"} />\n\n//             <ul className=\"list-group list-group-flush\">\n//               {credits.cast.map((credit) => {\n//                 return (\n//                   <CreditsList\n//                     key={credit.id}\n//                     id={credit.id}\n//                     title={credit.title}\n//                     url={`${posterBaseURLSmall}${credit.poster_path}`}\n//                     type={credit.media_type}\n//                     character={credit.character}\n//                     year={credit.release_date}\n//                   />\n//                 );\n//               })}\n//             </ul>\n//           </div>\n//         ) : (\n//           <p>loading</p>\n//         )}\n//       </div>\n//     );\n//   };\n_s(PersonPage, \"J8uvkuPaH4aIoOrMrTwmWbDzdNY=\", false, function () {\n  return [useParams];\n});\n_c = PersonPage;\nvar _c;\n$RefreshReg$(_c, \"PersonPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getPeople","Heading","MediaContainer","SectionTitle","Text","PersonPage","id","person","setPerson","credits","setCredits","getPersonData","personData","combined_credits","console","log","name","profile_path","known_for_department","birthday","place_of_birth","biography"],"sources":["C:/Users/natal/Desktop/movieFinderNEW/public/src/pages/person/PersonPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getPeople } from \"../../controllers/api\";\r\nimport { Heading } from \"../../components/heading/Heading\";\r\nimport { MediaContainer } from \"../../containers/media/MediaContainer\";\r\nimport { SectionTitle } from \"../../components/section/SectionTitle\";\r\nimport { Text } from \"../../components/text/Text\";\r\n\r\nexport const PersonPage = () => {\r\n  const { id } = useParams();\r\n  const [person, setPerson] = useState(null);\r\n  const [credits, setCredits] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getPersonData() {\r\n      const personData = await getPeople(id);\r\n      setPerson(personData);\r\n      setCredits(personData.combined_credits);\r\n    }\r\n    getPersonData();\r\n  }, []);\r\n\r\n  console.log(person);\r\n  console.log(credits);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {person ? <Heading name={person.name} /> : \"\"}\r\n      <MediaContainer\r\n        posterPath={person.profile_path}\r\n        videoKey={\"\"}\r\n        alt={person.name}\r\n        imgSize=\"medium\"\r\n        imgType={\"main-image\"}\r\n      />\r\n      <p>Known for department: {person.known_for_department}</p>\r\n\r\n      <section>\r\n        <SectionTitle name={\"Biography\"} />\r\n        <article>\r\n          <p>\r\n            Born: <i className=\"info-values\">{person.birthday} </i>\r\n          </p>\r\n          <i> {person.place_of_birth}</i>\r\n        </article>\r\n\r\n        <article className=\"row mb-3\">\r\n            <Text text={person.biography}/>\r\n        </article>\r\n      </section>\r\n\r\n      <section>\r\n        <SectionTitle name=\"Cast\" />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\n//     return (\r\n//       <div className=\"container\">\r\n//         {person ? (\r\n//           <div className=\"container\">\r\n//             <Heading name={person.name} />\r\n\r\n//             <Poster path={person.profile_path} alt={person.name} />\r\n\r\n//             <div className=\"row py-2\">\r\n//               <p>\r\n//                 <i>\r\n//                   Known for department:{\" \"}\r\n//                   <span className=\"info-values\">\r\n//                     {person.known_for_department}\r\n//                   </span>\r\n//                 </i>{\" \"}\r\n//               </p>\r\n//             </div>\r\n\r\n//             <SectionTitle name={\"Biography\"} />\r\n\r\n//             <div className=\"row\">\r\n//               <div className=\"col\">\r\n//                 <p>\r\n//                   Place of Birth: <i>{person.place_of_birth}</i>\r\n//                 </p>\r\n//                 <p>\r\n//                   Born at: <i>{person.birthday}</i>\r\n//                 </p>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"row\">\r\n//               <p>{person.biography}</p>\r\n//             </div>\r\n\r\n//             <SectionTitle name={\"Credits\"} />\r\n\r\n//             <ul className=\"list-group list-group-flush\">\r\n//               {credits.cast.map((credit) => {\r\n//                 return (\r\n//                   <CreditsList\r\n//                     key={credit.id}\r\n//                     id={credit.id}\r\n//                     title={credit.title}\r\n//                     url={`${posterBaseURLSmall}${credit.poster_path}`}\r\n//                     type={credit.media_type}\r\n//                     character={credit.character}\r\n//                     year={credit.release_date}\r\n//                   />\r\n//                 );\r\n//               })}\r\n//             </ul>\r\n//           </div>\r\n//         ) : (\r\n//           <p>loading</p>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}