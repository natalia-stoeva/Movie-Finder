{"ast":null,"code":"//search params\nconst tmdbKey = process.env.REACT_APP_tmdb_key;\nconst keyParams = `?api_key=${tmdbKey}`;\nconst tmdbBaseURL = \"https://api.themoviedb.org/3\";\nconst english = \"&language=en-US\";\n\n//multi search\nexport const multiSearch = async query => {\n  const multiSearch = `${tmdbBaseURL}/search/multi${keyParams}${english}&query=${query}&page=1&include_adult=false`;\n  console.log(multiSearch);\n  try {\n    const response = await fetch(multiSearch);\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      const searchResults = jsonResponse.results;\n      //new\n      console.log(searchResults.title);\n      return searchResults;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//movie details by id (with append to response)\nexport const getDetails = async id => {\n  const url = `${tmdbBaseURL}/movie/${id}${keyParams}${english}&append_to_response=videos,images,credits,similar`;\n  console.log(url);\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      const movieDetails = jsonResponse;\n      return movieDetails;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//tv details by id\nexport const getTvDetails = async id => {\n  const url = `${tmdbBaseURL}/tv/${id}${keyParams}${english}&append_to_response=videos,images,credits,similar`;\n  console.log(url);\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      const tvDetails = jsonResponse;\n      return tvDetails;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//people\nexport const getPeople = async id => {\n  const url = `${tmdbBaseURL}/person/${id}${keyParams}${english}&append_to_response=combined_credits,images,popular`;\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      const personDetails = jsonResponse;\n      return personDetails;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//trending movies\nexport const getTrendingMovies = async () => {\n  const url = `${tmdbBaseURL}/trending/movie/day${keyParams}`;\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      const trendingMovies = jsonResponse;\n      return trendingMovies.results;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// trending tv shows\nexport const getTrendingTvShows = async () => {\n  const url = `${tmdbBaseURL}/tv/popular/${keyParams}${english}&page=1`;\n  try {\n    const response = await fetch(url);\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      const popularTvShows = jsonResponse;\n      return popularTvShows.results;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"names":["tmdbKey","process","env","REACT_APP_tmdb_key","keyParams","tmdbBaseURL","english","multiSearch","query","console","log","response","fetch","ok","jsonResponse","json","searchResults","results","title","err","getDetails","id","url","movieDetails","getTvDetails","tvDetails","getPeople","personDetails","getTrendingMovies","trendingMovies","getTrendingTvShows","popularTvShows"],"sources":["C:/Users/natal/Desktop/movieFinderNEW/public/src/controllers/api.js"],"sourcesContent":["//search params\r\nconst tmdbKey = process.env.REACT_APP_tmdb_key;\r\nconst keyParams = `?api_key=${tmdbKey}`;\r\nconst tmdbBaseURL = \"https://api.themoviedb.org/3\";\r\nconst english = \"&language=en-US\";\r\n\r\n//multi search\r\nexport const multiSearch = async (query) => {\r\n  const multiSearch = `${tmdbBaseURL}/search/multi${keyParams}${english}&query=${query}&page=1&include_adult=false`;\r\n  console.log(multiSearch);\r\n  try {\r\n    const response = await fetch(multiSearch);\r\n    if (response.ok) {\r\n      const jsonResponse = await response.json();\r\n      const searchResults = jsonResponse.results;\r\n      //new\r\n      console.log(searchResults.title)\r\n      return searchResults;\r\n\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//movie details by id (with append to response)\r\nexport const getDetails = async (id) => {\r\n  const url = `${tmdbBaseURL}/movie/${id}${keyParams}${english}&append_to_response=videos,images,credits,similar`;\r\n  console.log(url);\r\n  try {\r\n    const response = await fetch(url);\r\n\r\n    if (response.ok) {\r\n      const jsonResponse = await response.json();\r\n      const movieDetails = jsonResponse;\r\n      return movieDetails;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//tv details by id\r\nexport const getTvDetails = async (id) => {\r\n  const url = `${tmdbBaseURL}/tv/${id}${keyParams}${english}&append_to_response=videos,images,credits,similar`;\r\n  console.log(url);\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n\r\n    if (response.ok) {\r\n      const jsonResponse = await response.json();\r\n      const tvDetails = jsonResponse;\r\n      return tvDetails;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//people\r\nexport const getPeople = async (id) => {\r\n  const url = `${tmdbBaseURL}/person/${id}${keyParams}${english}&append_to_response=combined_credits,images,popular`;\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      const jsonResponse = await response.json();\r\n      const personDetails = jsonResponse;\r\n      return personDetails;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//trending movies\r\nexport const getTrendingMovies = async () => {\r\n  const url = `${tmdbBaseURL}/trending/movie/day${keyParams}`;\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      const jsonResponse = await response.json();\r\n      const trendingMovies = jsonResponse;\r\n      return trendingMovies.results;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// trending tv shows\r\nexport const getTrendingTvShows = async () => {\r\n  const url = `${tmdbBaseURL}/tv/popular/${keyParams}${english}&page=1`;\r\n  try {\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n      const jsonResponse = await response.json();\r\n      const popularTvShows = jsonResponse;\r\n      return popularTvShows.results;\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}