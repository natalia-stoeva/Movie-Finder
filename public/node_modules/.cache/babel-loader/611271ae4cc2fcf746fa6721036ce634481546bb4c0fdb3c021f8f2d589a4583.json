{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natal\\\\Desktop\\\\movieFinderNEW\\\\public\\\\src\\\\pages\\\\tv\\\\TvPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { getTvDetails } from \"../../controllers/api\";\nimport ItemsCarousel from \"react-items-carousel\";\nimport { Heading } from \"../../components/heading/Heading\";\nimport { RatingsInfo } from \"../../components/ratingsInfo/RatingsInfo\";\nimport { MediaContainer } from \"../../containers/media/MediaContainer\";\nimport { Genre } from \"../../components/genres/Genres\";\nimport { SectionTitle } from \"../../components/section/SectionTitle\";\nimport { Text } from \"../../components/text/Text\";\nimport { PeopleContainer } from \"../../containers/cast/PeopleContainer\";\nimport { MovieCard } from \"../../components/cards/MovieCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { ChevronLink } from \"../../components/link/ChevronLink\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TvPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [tv, setTv] = useState(null);\n  const [cast, setCast] = useState(null);\n  const [videos, setVideos] = useState(null);\n  const [similar, setSimilar] = useState(null);\n  const [genres, setGenres] = useState(null);\n  useEffect(() => {\n    async function getTVDetails() {\n      const tv = await getTvDetails(id);\n      const extractGenres = Array.from(tv.genres, genre => genre.name);\n      setGenres(extractGenres);\n      setTv(tv);\n      setCast(tv.credits.cast);\n      setSimilar(tv.similar.results);\n      setVideos(tv.videos.results);\n    }\n    getTVDetails();\n  }, []);\n  console.log(\"cast\" + cast);\n  console.log(\"videos\" + videos);\n  console.log(\"similar\" + similar);\n  console.log(\"genres\" + genres);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        name: tv.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RatingsInfo, {\n        runtime: tv.episode_run_time,\n        status: tv.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: videos ? /*#__PURE__*/_jsxDEV(MediaContainer, {\n        posterPath: tv.poster_path || tv.backdrop_path,\n        imgSize: \"medium\",\n        alt: tv.name,\n        videoKey: videos[0].key,\n        imgStyles: \"poster-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [genres ? /*#__PURE__*/_jsxDEV(Genre, {\n        genres: genres\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(Heading, {\n        name: tv.tagline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        text: tv.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), cast ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        name: \"Top Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PeopleContainer, {\n        cast: cast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2 align-self-end\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLink, {\n            href: \"#\",\n            text: \"See Full Cast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TvPage, \"K4IqsI9xXrAVWYDNZCE0OYE3nzk=\", false, function () {\n  return [useParams];\n});\n_c = TvPage;\nvar _c;\n$RefreshReg$(_c, \"TvPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getTvDetails","ItemsCarousel","Heading","RatingsInfo","MediaContainer","Genre","SectionTitle","Text","PeopleContainer","MovieCard","FontAwesomeIcon","faChevronLeft","faChevronRight","Link","ChevronLink","TvPage","id","tv","setTv","cast","setCast","videos","setVideos","similar","setSimilar","genres","setGenres","getTVDetails","extractGenres","Array","from","genre","name","credits","results","console","log","episode_run_time","status","poster_path","backdrop_path","key","tagline","overview"],"sources":["C:/Users/natal/Desktop/movieFinderNEW/public/src/pages/tv/TvPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { getTvDetails } from \"../../controllers/api\";\r\nimport ItemsCarousel from \"react-items-carousel\";\r\nimport { Heading } from \"../../components/heading/Heading\";\r\nimport { RatingsInfo } from \"../../components/ratingsInfo/RatingsInfo\";\r\nimport { MediaContainer } from \"../../containers/media/MediaContainer\";\r\nimport { Genre } from \"../../components/genres/Genres\";\r\nimport { SectionTitle } from \"../../components/section/SectionTitle\";\r\nimport { Text } from \"../../components/text/Text\";\r\nimport { PeopleContainer } from \"../../containers/cast/PeopleContainer\";\r\nimport { MovieCard } from \"../../components/cards/MovieCard\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ChevronLink } from \"../../components/link/ChevronLink\";\r\n\r\nexport const TvPage = () => {\r\n  const { id } = useParams();\r\n\r\n  const [tv, setTv] = useState(null);\r\n  const [cast, setCast] = useState(null);\r\n  const [videos, setVideos] = useState(null);\r\n  const [similar, setSimilar] = useState(null);\r\n  const [genres, setGenres] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getTVDetails() {\r\n      const tv = await getTvDetails(id);\r\n      const extractGenres = Array.from(tv.genres, (genre) => genre.name);\r\n      setGenres(extractGenres);\r\n      setTv(tv);\r\n      setCast(tv.credits.cast);\r\n      setSimilar(tv.similar.results);\r\n      setVideos(tv.videos.results);\r\n    }\r\n    getTVDetails();\r\n  }, []);\r\n\r\n  console.log(\"cast\" + cast);\r\n  console.log(\"videos\" + videos);\r\n  console.log(\"similar\" + similar);\r\n  console.log(\"genres\" + genres);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <Heading name={tv.name} />\r\n        <RatingsInfo runtime={tv.episode_run_time} status={tv.status} />\r\n      </header>\r\n\r\n      <section>\r\n        {videos ? (\r\n          <MediaContainer\r\n            posterPath={tv.poster_path || tv.backdrop_path}\r\n            imgSize={\"medium\"}\r\n            alt={tv.name}\r\n            videoKey={videos[0].key}\r\n            imgStyles={\"poster-img\"}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </section>\r\n\r\n      <section>\r\n        {genres ? <Genre genres={genres} /> : \"\"}\r\n        <Heading name={tv.tagline} />\r\n        <Text text={tv.overview} />\r\n      </section>\r\n\r\n      {cast ? (\r\n        <section>\r\n          <SectionTitle name={\"Top Cast\"} />\r\n          <PeopleContainer cast={cast} />\r\n          <div className=\"row\">\r\n            <div className=\"col-2 align-self-end\">\r\n                <ChevronLink href={\"#\"} text={\"See Full Cast\"} />\r\n            </div>\r\n          </div>\r\n\r\n          \r\n        </section>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}